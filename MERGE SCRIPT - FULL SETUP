-----------------------------------CREATE TABLE 1 and load file 1---------------------------------------------------
CREATE TABLE customer (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    lastname VARCHAR(50)
);

INSERT INTO customer (id, name, lastname)
VALUES 
(1, 'Jane', 'Sparrow'),
(2, 'Mary', 'Lane'),
(3, 'Will', 'Smile');

select * from INDATAWETRUST.PUBLIC.CUSTOMER;

-----------------------------------CREATE TABLE 1 VIEW------------------------------------------

CREATE VIEW customer_view AS
SELECT
id,
name,
lastname,
CAST(SHA2_BINARY(NVL(CAST(id AS VARCHAR),'null') ) AS BINARY(40)) as hash_key,
CAST(SHA2_BINARY(NVL(CAST(name  AS VARCHAR),'null') ||'||'|| NVL(CAST(lastname    AS VARCHAR),'null') ) AS BINARY(40)) AS hash_diff
FROM customer;

select * from customer_view;

-----------------------------CREATE TABLE 2 AND MERGE FROM TABLE 1_VIEW TO TABLE 2---------------------------------------------

CREATE TABLE customer_hashed (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    lastname VARCHAR(50),
    hash_key BINARY(40),
    hash_diff BINARY(40)
);

MERGE INTO customer_hashed AS target
USING customer_view AS source 
ON target.hash_key = source.hash_key
WHEN MATCHED AND target.hash_diff <> source.hash_diff THEN
    UPDATE SET 
        name = source.name,
        lastname = source.lastname
WHEN NOT MATCHED THEN
    INSERT (id, name, lastname,hash_key,hash_diff)
    VALUES (source.id, source.name, source.lastname, source.hash_key,source.hash_diff);

select * from INDATAWETRUST.PUBLIC.CUSTOMER_HASHED;

--------------------------------TRUNCATE TABLE 1 AND LOAD 2nd file TO TABLE 1------------------------------------------

TRUNCATE TABLE customer;
INSERT INTO customer (id, name, lastname)
VALUES 
(1, 'Jack', 'Sparrow'),
(4, 'Bruno', 'Mars'),
(3, 'Will', 'Smith');

--------------------------------MERGE AGAIN FROM TABLE 1_VIEW TO TABLE 2------------------------------------------

MERGE INTO customer_hashed AS target
USING customer_view AS source 
ON target.hash_key = source.hash_key
WHEN MATCHED AND target.hash_diff <> source.hash_diff THEN
    UPDATE SET 
        target.name = source.name,
        target.lastname = source.lastname
WHEN NOT MATCHED THEN
    INSERT (id, name, lastname,hash_key,hash_diff)
    VALUES (source.id, source.name, source.lastname, source.hash_key,source.hash_diff);

select * from customer_hashed;
